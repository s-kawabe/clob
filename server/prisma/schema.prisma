datasource db {
  provider = "postgresql"
  url      = env("API_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int      @id @default(autoincrement())
  email      String   @unique
  name       String   @db.VarChar(128)
  imageURL   String?
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)
  topic      Topic[]
  answer     Answer[]
  like       Like[]
}

model Topic {
  id              Int      @id @default(autoincrement())
  userId          Int
  title           String   @db.VarChar(128)
  content         String   @db.Text
  limitAnswerChar Int
  answerClosedAt  DateTime
  close           Boolean
  created_at      DateTime @default(now()) @db.Timestamp(0)
  updated_at      DateTime @default(now()) @updatedAt @db.Timestamp(0)

  answer Answer[]
  user   User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Answer {
  id         Int      @id @default(autoincrement())
  topicId    Int
  userId     Int
  answer     String   @db.VarChar(64)
  created_at DateTime @default(now()) @db.Timestamp(0)
  updated_at DateTime @default(now()) @updatedAt @db.Timestamp(0)

  Like  Like[]
  topic Topic  @relation(fields: [topicId], references: [id], onDelete: Cascade)
  user  User   @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Like {
  answerId   Int
  userId     Int
  created_at DateTime @default(now()) @db.Timestamp(0)

  answer Answer @relation(fields: [answerId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@id([answerId, userId])
}
